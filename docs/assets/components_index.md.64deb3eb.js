import{_ as e,c as t,o,a as r}from"./app.5bf01db6.js";const f='{"title":"Vue 3 + Typescript + Vite","description":"","frontmatter":{},"headers":[{"level":2,"title":"Recommended IDE Setup","slug":"recommended-ide-setup"},{"level":2,"title":"Type Support For .vue Imports in TS","slug":"type-support-for-vue-imports-in-ts"}],"relativePath":"components/index.md"}',a={},s=r('<h1 id="vue-3-typescript-vite" tabindex="-1">Vue 3 + Typescript + Vite <a class="header-anchor" href="#vue-3-typescript-vite" aria-hidden="true">#</a></h1><p>This template should help get you started developing with Vue 3 and Typescript in Vite. The template uses Vue 3 <code>&lt;script setup&gt;</code> SFCs, check out the <a href="https://v3.vuejs.org/api/sfc-script-setup.html#sfc-script-setup" target="_blank" rel="noopener noreferrer">script setup docs</a> to learn more.</p><h2 id="recommended-ide-setup" tabindex="-1">Recommended IDE Setup <a class="header-anchor" href="#recommended-ide-setup" aria-hidden="true">#</a></h2><ul><li><a href="https://code.visualstudio.com/" target="_blank" rel="noopener noreferrer">VSCode</a> + <a href="https://marketplace.visualstudio.com/items?itemName=johnsoncodehk.volar" target="_blank" rel="noopener noreferrer">Volar</a></li></ul><h2 id="type-support-for-vue-imports-in-ts" tabindex="-1">Type Support For <code>.vue</code> Imports in TS <a class="header-anchor" href="#type-support-for-vue-imports-in-ts" aria-hidden="true">#</a></h2><p>Since TypeScript cannot handle type information for <code>.vue</code> imports, they are shimmed to be a generic Vue component type by default. In most cases this is fine if you don&#39;t really care about component prop types outside of templates. However, if you wish to get actual prop types in <code>.vue</code> imports (for example to get props validation when using manual <code>h(...)</code> calls), you can enable Volar&#39;s Take Over mode by following these steps:</p><ol><li>Run <code>Extensions: Show Built-in Extensions</code> from VSCode&#39;s command palette, look for <code>TypeScript and JavaScript Language Features</code>, then right click and select <code>Disable (Workspace)</code>. By default, Take Over mode will enable itself if the default TypeScript extension is disabled.</li><li>Reload the VSCode window by running <code>Developer: Reload Window</code> from the command palette.</li></ol><p>You can learn more about Take Over mode <a href="https://github.com/johnsoncodehk/volar/discussions/471" target="_blank" rel="noopener noreferrer">here</a>.</p>',8),i=[s];function n(p,d,c,l,u,h){return o(),t("div",null,i)}var _=e(a,[["render",n]]);export{f as __pageData,_ as default};
